<source>
  @type forward
  @id input1
</source>

## filter out service-infos
<filter **>
  @type grep
  <exclude>
    key log
    pattern /\/service[-_]info/
  </exclude>
</filter>


## format log messages
<filter **>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /^level: (?<level>.+?), file: (?<file>.+?), message: {'log': "(?<message>.+)", 'path': '(?<path>\S+)', 'method': '(?<method>\S+)', 'user': '(?<user>\S+)', 'sid': '(?<sid>\S+)'}/
  </parse>
</filter>

<filter **>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /^level: (?<level>.+?), file: (?<file>.+?), message: (?<message>.+)/
  </parse>
</filter>

## uwsgi format
<filter **>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /\[pid: \d+\|app: \d+\|req: \d+\/\d+\] .+? .*? {\d+ vars in \d+ bytes} \[.+?\] (?<method>\S+) (?<uri>\S+) => generated (?<rsize>\d+) bytes in (?<duration>\d+) msecs \(\S+ (?<status>\d+)\) \d+ headers in \d+ bytes \(\d+ switches on core \d+\)/
  </parse>
</filter>

## gunicorn access format
<filter **>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /(?<level>.+?)\t(?<method>.+?)\t(?<uri>.+?)\t(?<rsize>.+?)\t(?<duration>.+?)\t(?<status>.+)/
  </parse>
</filter>

## gunicorn error format
<filter **>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  <parse>
    @type regexp
    expression /\[.+?\] \[(?<pid>.+?)\] \[(?<level>.+?)\] (?<message>.+)/
  </parse>
</filter>

## opa format
<filter candigv2_opa_1>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  <parse>
    @type regexp
    expression /{"client_addr":.+?,"level":"(?<level>\S+)","msg":"Sent response.","req_id":(?<req_id>\d+),"req_method":"(?<method>\w+)","req_path":"(?<uri>\S+?)","resp_bytes":(?<rsize>\d+),"resp_duration":(?<duration>[\d\.]+),"resp_status":(?<status>\d+),.+}/
  </parse>
</filter>

<filter candigv2_opa_1>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  <parse>
    @type regexp
    expression /{"client_addr":.+?,"level":"(?<level>\S+)","msg":"Received request.","req_id":(?<req_id>\d+),"req_method":"(?<method>\w+)","req_path":"(?<uri>\S+?)".+}/
  </parse>
</filter>

## filter tyk
<filter candigv2_tyk_1>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  <parse>
    @type regexp
    expression /time=.+? level=(?<level>\S+) msg="(?<message>.+?)" prefix=(?<prefix>\S+)/
  </parse>
</filter>


## remove redundant keys
<filter **>
  @type record_transformer
  remove_keys container_id, container_name
</filter>

<match *>
  @type file
  path /logging/
</match>
