# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
 
# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093
 
# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"
  - "django.rules"
 
# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
 
  #   # metrics_path defaults to '/metrics'
  #   # scheme defaults to 'http'.
 
    static_configs:
    - targets: ['localhost:9090']

  - job_name: "django"
    static_configs:
      - targets:
        - candig.docker.internal:8008 
 
  # - job_name: 'blackbox'
  #   # scheme: http
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]  # Look for a HTTP 200 response.
  #   static_configs:
  #     - targets:
  #       - http://prometheus.io    # Target to probe with http.
  #       # - http://candig.docker.internal:8008   
  #       # - http://localhost:8008
  #       - 192.168.4.69:8008
  #       - candigv2_katsu_1:8008
  #       # - http://localhost:9090
  #       # - http://candig.docker.internal:9090
  #       - 192.168.4.69:9090
  #       - candigv2_prometheus_1:9090

  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox:9115  # The blackbox exporter's real hostname:port.
 
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']