openapi: 3.0.0
info:
  description: Microservice implementation of CanDIG v1 federation
  version: "0.1.0-oas3"
  title: CanDIG Federation API POC
  contact:
    email: dnaidoo@bcgsc.ca
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /search:
    get:
      summary: send query to a microservice
      description: >
        Entry point for Tyk to pass GET requests to CanDIG microservices.
        Federation broadcasting defined by 'federation' header.
      operationId: candig_federation.api.operations.get_search
      parameters:
        - $ref: '#/components/parameters/endpoint_path'
        - $ref: '#/components/parameters/endpoint_payload'
        - $ref: '#/components/parameters/Federation'
      responses:
        '200':
          description: Successful query
        '400':
          description: Bad input parameter
        '403':
          description: Authorization Error
        '404':
          description: Expression not found
        '500':
          description: Internal Error
        '508':
          description: Federation node time out
    post:
      summary: Add entry to microservice
      description: >
        Entry point for Tyk to pass POST requests to CanDIG microservices.
        Federation broadcasting defined by 'federation' header.
      operationId: candig_federation.api.operations.post_search
      parameters:
        - $ref: '#/components/parameters/Federation'
      responses:
        '201':
          description: entry created
        '400':
          description: 'invalid input, object invalid'
        '403':
          description: Authorization Error
        '404':
          description: Expression not found
        '409':
          description: an existing item already exists
        '500':
          description: Internal Error
        '508':
          description: Federation node time out
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostObject'
servers:
  - url: /federation
components:
  parameters:
    endpoint_path:
      name: endpoint_path
      description: Path to microservice endpoint
      in: query
      required: true
      example: /variantget/projects
      schema:
        type: string
    endpoint_payload:
      name: endpoint_payload
      description: Semicolon separated parameters to pass on
      in: query
      required: false
      example: 'abc:123;def:789'
      schema:
        type: string
    Federation:
      name: Federation
      description: Flag for federated query. Federation assumed unless false is specified
      in: header
      schema:
        type: boolean
  schemas:
    PostObject:
      type: object
      required:
        - endpoint_path
        - endpoint_payload
      properties:
        endpoint_path:
          type: string
          example: v2/get
        endpoint_payload:
          type: object
    Error:
      type: object
      required:
        - message
        - code
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string