version: '3.7'

services:
  chord-metadata:
    build:
      context: $PWD/lib/chord-metadata/chord_metadata
      args:
        venv_python: "${VENV_PYTHON}"
        alpine_version: "${ALPINE_VERSION}"
    image: ${DOCKER_REGISTRY}/chord-metadata:${CHORD_METADATA_VERSION:-latest}
    networks:
      - ${DOCKER_NET}
    ports:
      - "${CHORD_METADATA_PORT}:8000"
    depends_on:
      - metadata-db
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.lbswarm=true"
        - "traefik.http.routers.chord-metadata.rule=Host(`chord-metadata.${CANDIG_DOMAIN}`)"
        - "traefik.http.services.chord-metadata.loadbalancer.server.port=${CHORD_METADATA_PORT}"
    logging: *default-logging
    environment:
      - CHORD_URL=${CHORD_METADATA_HOST}
      - CHORD_PERMISSIONS=${CHORD_METADATA_AUTH}
      - CHORD_DEBUG=${CHORD_METADATA_DEBUG}
      - POSTGRES_HOST=metadata-db
      - POSTGRES_USER=admin
    secrets:
      - source: metadata-settings
        target: /app/chord_metadata_service/metadata/settings.py
      - source: metadata-app-secret
        target: metadata_app_secret
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    entrypoint:
      - /bin/bash
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
      #interval: 30s
      #timeout: 20s
      #retries: 3

  metadata-db:
    image: postgres:13-alpine
    #volumes:
      #- chord-metadata-db:/var/lib/postgresql/data
      #add volume name to lib/{compose,swarm,kubernetes}
      #add volume name to docker-volumes in Makefile
    networks:
      - ${DOCKER_NET}
    # ports:
    #   - "${CHORD_METADATA_PORT}:8000"
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging: *default-logging
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=metadata
      - POSTGRES_PASSWORD_FILE=/run/secrets/metadata_db_secret
    secrets:
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

