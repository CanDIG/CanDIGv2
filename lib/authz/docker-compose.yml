version: '3.7'

services:
  keycloak:
    build:
      context: ${PWD}/lib/authz/keycloak
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    container_name: keycloak
    command: ["-b", "${KEYCLOAK_SERVICE_HOST}", "-Dkeycloak.migration.strategy=IGNORE_EXISTING"]
    ports:
       - "${KEYCLOAK_SERVICE_PUBLIC_PORT}:8081"
    env_file:
       - ./keycloak/data/secrets.env
    networks:
      - ${DOCKER_NET}
    volumes:
      - ./keycloak/data/keycloak-db:/opt/jboss/keycloak/standalone/data
      - ./keycloak/data/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  tyk:
    container_name: tyk
    build:
      context: ${PWD}/lib/authz/tyk
    image: tykio/tyk-gateway:${TYK_VERSION}
    networks:
      - ${DOCKER_NET}
    ports:
      - "${TYK_SERVICE_PUBLIC_PORT}:8080"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - ./tyk/data/authMiddleware.js:/opt/tyk-gateway/middleware/authMiddleware.js
      - ./tyk/data/oidcDistributedClaimsConduitMiddleware.js:/opt/tyk-gateway/middleware/oidcDistributedClaimsConduitMiddleware.js
      - ./tyk/data/tyk.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk/data/virtualLogin.js:/opt/tyk-gateway/middleware/virtualLogin.js
      - ./tyk/data/virtualLogout.js:/opt/tyk-gateway/middleware/virtualLogout.js
      - ./tyk/data/virtualToken.js:/opt/tyk-gateway/middleware/virtualToken.js
      - ./tyk/data/api_candig.json:/opt/tyk-gateway/apps/api_candig.json
      - ./tyk/data/api_auth.json:/opt/tyk-gateway/apps/api_auth.json
      - ./tyk/data/policies.json:/opt/tyk-gateway/policies/policies.json
    depends_on:
      - tyk-redis
  tyk-redis:
    container_name: tyk-redis
    image: redis:${TYK_REDIS_VERSION}
    networks:
     - ${DOCKER_NET}
    volumes:
      - ./tyk/data/redis:/data
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  vault:
    container_name: vault
    build:
      context: ${PWD}/lib/authz/vault
      args:
        - VAULT_VERSION=1.5.0
    ports:
      - ${VAULT_SERVICE_PORT}:8200
    volumes:
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    command: server -config=/vault/config/vault-config.json
    cap_add:
      - IPC_LOCK    
    networks:
      - ${DOCKER_NET}
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  bridge-net:
    external: true