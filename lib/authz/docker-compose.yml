version: '3.7'

services:
  keycloak:
    build:
      context: ${PWD}/lib/authz/keycloak
      args:
        - BASE_IMAGE=jboss/keycloak:${KEYCLOAK_VERSION}
    container_name: ${CANDIG_AUTH_CONTAINER_NAME}
    command: ["-b", "${KEYCLOAK_SERVICE_HOST}", "-Dkeycloak.migration.strategy=IGNORE_EXISTING"]
    ports:
       - "${KEYCLOAK_SERVICE_CONTAINER_PORT}:8080"
    networks:
      - ${DOCKER_NET}
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    environment: 
      - KEYCLOAK_USER=${KC_ADMIN_USER}
      - KEYCLOAK_PASSWORD=${KC_ADMIN_PW}

  tyk:
    container_name: tyk
    build:
      context: ${PWD}/lib/authz/tyk
      args: 
        - BASE_IMAGE=tykio/tyk-gateway:${TYK_VERSION}
    networks:
      - ${DOCKER_NET}
    ports:
      - "${TYK_SERVICE_PUBLIC_PORT}:8080"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - tyk-data:/opt/tyk-gateway
    depends_on:
      - tyk-redis

  tyk-redis:
    container_name: tyk-redis
    image: redis:${TYK_REDIS_VERSION}
    networks:
     - ${DOCKER_NET}
    volumes:
      - tyk-redis-data:/data
    ports:
      - "6379:6379"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  vault:
    container_name: vault
    build:
      context: ${PWD}/lib/authz/vault
      args:
        - VAULT_VERSION=1.5.0
    ports:
      - ${VAULT_SERVICE_PORT}:8200
    volumes:
      - vault-data:/vault
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
    command: server -config=/vault/config/vault-config.json
    cap_add:
      - IPC_LOCK    
    networks:
      - ${DOCKER_NET}
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
