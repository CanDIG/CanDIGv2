version: '3.7'

services:
  katsu:
    build:
      context: $PWD/lib/katsu/katsu_service
      args:
        venv_python: "3.10"
        alpine_version: "3.16"
    image: ${DOCKER_REGISTRY}/katsu:${KATSU_VERSION:-latest}
    ports:
      - "${KATSU_PORT}:8000"
    depends_on:
      - metadata-db
    environment:
      - KATSU_URL=${KATSU_HOST}
      - KATSU_PERMISSIONS=${KATSU_AUTH}
      - KATSU_DEBUG=${KATSU_DEBUG}
      - POSTGRES_HOST=metadata-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD_FILE=/run/secrets/metadata_db_secret
      - INSIDE_CANDIG=${INSIDE_CANDIG}
      - OPA_URL=${OPA_PRIVATE_URL}
      - CANDIG_AUTHORIZATION=${CANDIG_AUTHORIZATION}
      - CACHE_TIME=${CACHE_TIME}
      - OPA_SITE_ADMIN_KEY=${OPA_SITE_ADMIN_KEY}
      - HOST_CONTAINER_NAME=${KATSU_CONTAINER}
    secrets:
      - source: metadata-app-secret
        target: metadata_app_secret
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
      - source: opa-root-token
        target: opa-root-token
    entrypoint:
      - /bin/bash
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py runserver 0.0.0.0:8000
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
      #interval: 30s
      #timeout: 20s
      #retries: 3

  metadata-db:
    image: postgres:13-alpine
    #volumes:
      #- katsu-db:/var/lib/postgresql/data
      #add volume name to lib/{compose,swarm,kubernetes}
      #add volume name to docker-volumes in Makefile
    # ports:
    #   - "${KATSU_PORT}:8000"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=metadata
      - POSTGRES_PASSWORD_FILE=/run/secrets/metadata_db_secret
      - POSTGRES_HOST_AUTH_METHOD=password
    secrets:
      - source: metadata-db-user
        target: metadata_db_user
      - source: metadata-db-secret
        target: metadata_db_secret
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3

