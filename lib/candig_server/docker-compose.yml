version: '3.7'

services:
  candig-server:
    build:
      context: $PWD/lib/candig_server
      args:
        venv_python: '3.6'
    image: ${DOCKER_REGISTRY}/candig_server:${CANDIG_SERVER_VERSION}
    networks:
      - ${DOCKER_NET}
    ports:
      - "${CANDIG_SERVER_PORT}:3000"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - traefik.enable=true
        - traefik.port=${CANDIG_SERVER_PORT}
        - traefik.docker.network=${DOCKER_NET}
        - traefik.frontend.rule=Host:candig-server.${CANDIG_DOMAIN}
    # logging:
    #   driver: "fluentd"
    #   options:
    #     tag: docker.{{.Name}}
    #     fluentd-async-connect: "true"
    command: ["--host", "0.0.0.0", "--port", "3000"]

  candig-server-arbiter:
    build:
      context: $PWD/lib/candig_server/arbiter
      args:
        venv_python: '3.6'
    image: ${DOCKER_REGISTRY}/candig_server_arbiter:latest
    networks:
      - ${DOCKER_NET}
    ports:
      - "${CANDIG_ARBITER_SERVICE_PORT}:3002"
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - traefik.enable=true
        - traefik.port=${CANDIG_ARBITER_SERVICE_PORT}
        - traefik.docker.network=${DOCKER_NET}
        - traefik.frontend.rule=Host:candig-server-arbiter.${CANDIG_DOMAIN}
    # logging:
    #   driver: "fluentd"
    #   options:
    #     tag: docker.{{.Name}}
    #     fluentd-async-connect: "true"
    command: ["--host", "0.0.0.0", "--port", "${CANDIG_ARBITER_SERVICE_PORT}"]
    
    
  candig-server-authorization:
    container_name: candig-server-authz
    image: openpolicyagent/opa:${OPA_VERSION}
    volumes:
      - ${PWD}/lib/candig_service/authz/opa/data:/data
      - ${PWD}/lib/candig_service/authz/opa/policy.rego:/policy.rego
    networks:
      - ${DOCKER_NET}
    ports:
      - "${CANDIG_AUTHZ_SERVICE_PORT}:8181"
    deploy:
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - traefik.enable=true
        - traefik.port=${CANDIG_AUTHZ_SERVICE_PORT}
        - traefik.docker.network=${DOCKER_NET}
        - traefik.frontend.rule=Host:opa.${CANDIG_DOMAIN}
    # logging:
    #   driver: "fluentd"
    #   options:
    #     tag: docker.{{.Name}}
    #     fluentd-async-connect: "true"
    command:
      - "run"
      - "--server"
      - "--log-level=${OPA_LOG_LEVEL}"
      - "/policy.rego"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:${CANDIG_AUTHZ_SERVICE_PORT}/health"]
      interval: 30s
      timeout: 20s
      retries: 3

